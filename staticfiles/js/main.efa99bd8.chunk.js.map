{"version":3,"sources":["context.js","components/Navbar.js","components/CreateTweetForm.js","components/Tweet.js","components/Profile.js","components/Pagination.js","pages/Home.js","pages/Detail.js","components/User.js","pages/Users.js","pages/ErrorPage.js","components/Notification.js","components/ModalRetweet.js","App.js","serviceWorker.js","index.js"],"names":["UserContext","React","createContext","UserContextProvider","props","state","dataset","username","canTweet","page","tweetId","feedOwner","message","value","tweets","prev","next","count","tweetsPerPage","show","retweetingTweet","notification","notVariant","handleRetweet","bind","handleTweetAdd","handleLikeClick","handleDeleteClick","handleTextArea","fetchSomeTweets","openModal","closeModal","this","includes","_","prevState","setState","forceEndpoint","endpoint","fetch","then","response","ok","json","Error","data","results","previous","Array","isArray","window","scrollTo","catch","err","console","log","e","preventDefault","content","method","headers","getCookie","body","JSON","stringify","newTweet","id","action","location","href","updatingTweet","length","find","tweet","likes","user_liked","original","currentTweet","newLikes","deepStateTweetsCopy","parse","currentTweetAsOriginal","filter","tweetContainsOriginal","target","Provider","children","Component","name","cookieValue","document","cookie","cookies","split","i","trim","substring","decodeURIComponent","Navbar","useContext","bg","variant","className","Brand","Nav","Link","CreateTweetForm","Row","Col","xs","lg","Form","onSubmit","Group","controlId","Label","Control","as","rows","onChange","Button","type","StyledButton","styled","Tweet","src","owner","avatar","alt","ButtonGroup","aria-label","size","onClick","Profile","useState","profileData","setProfileData","useEffect","user","isFollower","followerings","followers","editableInfo","FormData","defaultValue","first_name","last_name","email","bio","info","following","Pagination","current","setCurrent","numberOfPages","Math","ceil","handleNextPrev","closest","func","handleFirstLast","whereTo","pageNum","indexOf","replace","First","data-func","disabled","Prev","Item","active","Next","Last","Home","map","key","login","Container","Detail","User","profile","Users","users","setUsers","ErrorPage","StyledContainer","Notification","Alert","ModalRetweet","retweetingtweet","onHide","setValue","Modal","aria-labelledby","centered","Header","closeButton","Title","Body","Footer","App","Boolean","hostname","match","reactPage","getElementById","ReactDOM","render","navigator","serviceWorker","ready","registration","unregister","error"],"mappings":"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","file":"static/js/main.efa99bd8.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nexport const UserContext = React.createContext();\r\n\r\nclass UserContextProvider extends React.Component{\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      // for correct render purposes\r\n      dataset: {\r\n        username: props.username, \r\n        canTweet: props.canTweet,\r\n        page: props.page,\r\n        tweetId: props.tweetId,\r\n        feedOwner: props.feedOwner,\r\n        message: props.message,\r\n      },\r\n      // for add_tweet purposes\r\n      value: '', \r\n      tweets: [],\r\n      // for pagination purposes\r\n      prev: '', \r\n      next: '', \r\n      count: 0,\r\n      tweetsPerPage: 15,\r\n      // for retweeting modal purposes\r\n      show: false,\r\n      retweetingTweet: null,\r\n      // notification \r\n      notification: '',\r\n      notVariant: 'success',\r\n    }\r\n    this.handleRetweet = this.handleRetweet.bind(this);\r\n    this.handleTweetAdd = this.handleTweetAdd.bind(this);\r\n    this.handleLikeClick = this.handleLikeClick.bind(this);\r\n    this.handleDeleteClick = this.handleDeleteClick.bind(this);\r\n    this.handleTextArea = this.handleTextArea.bind(this);\r\n    this.fetchSomeTweets = this.fetchSomeTweets.bind(this);\r\n    this.openModal = this.openModal.bind(this);\r\n    this.closeModal = this.closeModal.bind(this);\r\n  }\r\n\r\n  \r\n  componentDidMount(){\r\n    // when do you actually need to fetch some tweets?\r\n    // otherwise, it's error page or something else\r\n    if (this.state.dataset.username && \r\n       ['home', 'users', 'detail', 'user'].includes(this.state.dataset.page)){\r\n      this.fetchSomeTweets();\r\n    }\r\n  }\r\n\r\n  componentDidUpdate(_, prevState){\r\n    if (this.state.dataset.page === prevState.dataset.page) return;\r\n    if (this.state.notification){\r\n      this.setState({notification: '', notVariant: 'success'});\r\n    }\r\n  }\r\n  \r\n  fetchSomeTweets(forceEndpoint=null){\r\n    // default endpoint for home page\r\n    let endpoint = '/api/tweets';\r\n    \r\n    // forceEndpoint servers to paginate\r\n    if (!forceEndpoint){\r\n      if (this.state.dataset.page === 'user'){\r\n        // if django passes username\r\n        endpoint += `/?username=${this.state.dataset.feedOwner}`;\r\n      } else if (this.state.dataset.page === 'detail'){\r\n        // if django passes tweetid\r\n        endpoint += `/${this.state.dataset.tweetId}`;\r\n      }\r\n    } else {\r\n      // next or prev btn click\r\n      endpoint = forceEndpoint;\r\n    }\r\n\r\n    fetch(endpoint)\r\n      .then(response => {\r\n        if (response.ok){\r\n          return response.json()\r\n        } else {\r\n          throw new Error('Something went wrong!');\r\n        }\r\n      })\r\n      .then(data => {\r\n        // temp, for pagination\r\n        if (data.results){\r\n          let prev = data.previous;\r\n          let next = data.next; \r\n          let count = data.count;\r\n          data = data.results\r\n  \r\n          if (!Array.isArray(data)){\r\n            this.setState({tweets: [data]});\r\n          } else {\r\n            this.setState({tweets: data, prev, next, count});\r\n          };\r\n        } else {\r\n          // the condition below will be met, if detailed view requested a tweet\r\n          if (!Array.isArray(data)){\r\n            this.setState({tweets: [data]});\r\n          } else {\r\n            this.setState({tweets: data});\r\n          };\r\n        }\r\n        window.scrollTo(0,0);\r\n      })\r\n      .catch(err => {\r\n        console.log(err.message);\r\n      })\r\n  }\r\n\r\n  //basically it's a form, so you could have used FormData\r\n  //but it's just a field, so json is okay\r\n  handleTweetAdd(e){\r\n    e.preventDefault(); \r\n    let data = {content: this.state.value};\r\n    fetch('/api/tweets/add-tweet', {\r\n      method: \"POST\", \r\n      headers: {\r\n        'HTTP_X_REQUESTED_WITH': 'XMLHttpRequest',\r\n        'X-Requested-With': 'XMLHttpRequest',\r\n        'X-CSRFToken': getCookie('csrftoken'),\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify(data),\r\n    }).then(response => {\r\n        if (response.ok){\r\n          return response.json()\r\n        }else{\r\n          throw new Error('Something went wrong!');\r\n        }\r\n      })\r\n      .then(newTweet => {\r\n        let tweets = [newTweet, ...this.state.tweets];\r\n        this.setState({tweets, value: ''});\r\n      })\r\n      .catch(err => {\r\n        console.log(err);\r\n      })\r\n  }\r\n\r\n  handleRetweet(id, content){\r\n    let data = {\r\n      action: 'retweet',\r\n    }\r\n    if (content){\r\n      data.content = content;\r\n    }\r\n    fetch(`/api/tweets/tweet-action/${id}`, {\r\n      method: \"POST\", \r\n      headers: {\r\n        'HTTP_X_REQUESTED_WITH': 'XMLHttpRequest',\r\n        'X-Requested-With': 'XMLHttpRequest',\r\n        'X-CSRFToken': getCookie('csrftoken'),\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify(data), \r\n    }).then(response => {\r\n      if (response.ok){\r\n        return response.json()\r\n      }else {\r\n        throw new Error('Something went wrong! Please try again later!');\r\n      }\r\n    }).then(newTweet => {\r\n      // what it means is we need to prepend new retweet only if its user's own feed\r\n      // this is true only if a user on his home page\r\n      if (this.state.dataset.page === 'home'){\r\n        let tweets = [newTweet, ...this.state.tweets];\r\n        this.setState({tweets, show: false});\r\n      } else {\r\n        // paste a message that the tweet was retweeted; \r\n        this.setState({show: false, notification: 'Successful retweet!'});\r\n      }\r\n    }).catch(err => {\r\n      this.setState({show: false, notification: err.message, notVariant: 'danger'});\r\n    })\r\n  }\r\n\r\n  handleDeleteClick(id){\r\n    let action = 'delete'; \r\n    fetch(`/api/tweets/${id}`, {\r\n      method: \"DELETE\", \r\n      headers: {\r\n        'HTTP_X_REQUESTED_WITH': 'XMLHttpRequest',\r\n        'X-Requested-With': 'XMLHttpRequest',\r\n        'X-CSRFToken': getCookie('csrftoken'),\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify({action}), \r\n    }).then(response => {\r\n      if (response.ok){\r\n        return response.json()\r\n      }else {\r\n        throw new Error('Something went wrong! Please try again later!');\r\n      }\r\n    })\r\n    .then(data => {\r\n      window.location.href = '/';\r\n      this.setState({notification: data.message});\r\n    })\r\n    .catch(err => {\r\n      this.setState({notification: err.message, notVariant: 'danger'});\r\n    })\r\n  }\r\n\r\n  handleLikeClick(id){\r\n    // toDo: I should consider reduce the amount of ifs statements and make a solid single logic\r\n    // works if we have all the tweets in the state\r\n    let action; \r\n    let updatingTweet; \r\n    let theTweet;\r\n    if (this.state.tweets.length > 1){\r\n      // we have many tweets\r\n      // but even though we have many tweets, we could have a retweet\r\n      // which is not in the state, and we need to like the tweet anyway!\r\n\r\n      if (this.state.tweets.find(tweet => tweet.id === id)){\r\n        // maybe we're liking our own tweet\r\n        theTweet = this.state.tweets.find(tweet => tweet.id === id);\r\n        action = theTweet.likes.user_liked ? 'dislike' : 'like';\r\n      } else {\r\n        // otherwise, we're liking one's original tweet\r\n        theTweet = this.state.tweets.find(tweet => {\r\n          if (tweet.original){\r\n            return tweet.original.id === id\r\n          } \r\n          return false;\r\n        });\r\n        action = theTweet.original.likes.user_liked ? 'dislike' : 'like';\r\n      }\r\n\r\n    } else {\r\n      // we have only one tweet in the state\r\n      if (this.state.tweets[0].id === id){\r\n        // liking the main tweet\r\n        action = this.state.tweets[0].likes.user_liked ? 'dislike' : 'like';\r\n        updatingTweet = 'main';\r\n      } else {\r\n        // liking the parent tweet\r\n        action = this.state.tweets[0].original.likes.user_liked ? 'dislike' : 'like';\r\n        updatingTweet = 'original';\r\n      }\r\n    }\r\n\r\n\r\n    fetch(`/api/tweets/tweet-action/${id}`, {\r\n      method: \"POST\", \r\n      headers: {\r\n        'HTTP_X_REQUESTED_WITH': 'XMLHttpRequest',\r\n        'X-Requested-With': 'XMLHttpRequest',\r\n        'X-CSRFToken': getCookie('csrftoken'),\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify({action}), \r\n    }).then(response => {\r\n      if (response.ok){\r\n        return response.json()\r\n      }else {\r\n        throw new Error('something went wrong!');\r\n      }\r\n    }).then(data => {\r\n      // data => the amount of new likes\r\n      let newLikes = data.likes; \r\n\r\n      // [!] need a deep copy of the state, because we will change the amount of likes right in the object\r\n      let deepStateTweetsCopy = JSON.stringify(this.state.tweets);\r\n      deepStateTweetsCopy = JSON.parse(deepStateTweetsCopy);\r\n\r\n      // if there's only one tweet in the state, there's nothing left to update but itself\r\n      if (this.state.dataset.page === 'detail'){\r\n        if (updatingTweet === 'main'){\r\n          deepStateTweetsCopy[0].likes.likes = newLikes; \r\n          deepStateTweetsCopy[0].likes.user_liked = !deepStateTweetsCopy[0].likes.user_liked; \r\n        } else {\r\n          deepStateTweetsCopy[0].original.likes.likes = newLikes; \r\n          deepStateTweetsCopy[0].original.likes.user_liked = !deepStateTweetsCopy[0].original.likes.user_liked; \r\n        }\r\n        this.setState({tweets: deepStateTweetsCopy})\r\n        return;\r\n      }\r\n\r\n      // find the tweet, likes amount of which, are being changed\r\n      let currentTweet;\r\n      // it can be original tweet itself in one place\r\n      if (deepStateTweetsCopy.find(tweet => tweet.id === id)){\r\n        currentTweet = deepStateTweetsCopy.find(tweet => tweet.id === id);\r\n        //change original tweet's likes\r\n        currentTweet.likes.likes = newLikes; \r\n        currentTweet.likes.user_liked = !currentTweet.likes.user_liked;\r\n\r\n        // I have to check if the tweet is also somewhere else on the page: \r\n        let currentTweetAsOriginal = deepStateTweetsCopy.filter(tweet => {\r\n          if (tweet.original){\r\n            return tweet.original.id === id;\r\n          };\r\n          return false;\r\n        });\r\n\r\n        // if there're any\r\n        if (currentTweetAsOriginal){\r\n          for (let tweetContainsOriginal of currentTweetAsOriginal){\r\n            tweetContainsOriginal.original.likes.likes = newLikes; \r\n            tweetContainsOriginal.original.likes.user_liked = !tweetContainsOriginal.original.likes.user_liked; \r\n          }\r\n        }\r\n      } else {\r\n        // or it can be found at .original in multiple places\r\n        let currentTweetAsOriginal = deepStateTweetsCopy.filter(tweet => {\r\n          if (tweet.original){\r\n            return tweet.original.id === id;\r\n          };\r\n          return false;\r\n        });\r\n\r\n        // if there're any\r\n        if (currentTweetAsOriginal){\r\n          for (let tweetContainsOriginal of currentTweetAsOriginal){\r\n            tweetContainsOriginal.original.likes.likes = newLikes; \r\n            tweetContainsOriginal.original.likes.user_liked = !tweetContainsOriginal.original.likes.user_liked; \r\n          }\r\n        }\r\n      }\r\n    \r\n      // finally, rerendering the updated tweets\r\n      this.setState({tweets: deepStateTweetsCopy})\r\n    }).catch(err => {\r\n      console.log(err);\r\n    })\r\n  }\r\n\r\n  handleTextArea(e){\r\n    let value = e.target.value; \r\n    this.setState({value});\r\n  }\r\n\r\n  // handle Cart click on the home page\r\n  openModal(id){\r\n    // type of tweets is always an array\r\n    // id may be in tweet.original\r\n    // not all of the tweets have .original\r\n    let retweetingTweet = this.state.tweets.find(tweet => tweet.id === id);\r\n    if (!retweetingTweet){\r\n      retweetingTweet = this.state.tweets.find(tweet => {\r\n        if (tweet.original){\r\n          return tweet.original.id === id\r\n        }\r\n        return false;\r\n      });\r\n      retweetingTweet = retweetingTweet.original;\r\n    }\r\n    this.setState({show: true, retweetingTweet});\r\n  }\r\n\r\n  closeModal(e){\r\n    this.setState({show: false});\r\n  }\r\n\r\n  render(){\r\n    return(\r\n      // so, basically value={{...this.state}} doesn't make a deep copy, \r\n      // but the good thing is Im not changing state anywhere else but here\r\n      <UserContext.Provider \r\n        value={{\r\n          ...this.state, \r\n          handleLikeClick: this.handleLikeClick, \r\n          handleTweetAdd: this.handleTweetAdd, \r\n          handleRetweet: this.handleRetweet, \r\n          handleTextArea: this.handleTextArea,\r\n          handleDeleteClick: this.handleDeleteClick,\r\n          fetchSomeTweets: this.fetchSomeTweets,\r\n          closeModal: this.closeModal, \r\n          openModal: this.openModal,\r\n        }}\r\n      >\r\n\r\n        {this.props.children}\r\n      </UserContext.Provider>\r\n    )\r\n  }\r\n}\r\n\r\nexport default UserContextProvider;\r\n\r\n\r\n// OTHER FUNCTIONS, ALSO GOOD FOR UTILS AND STUFF\r\nfunction getCookie(name) {\r\n  let cookieValue = null;\r\n  if (document.cookie && document.cookie !== '') {\r\n      const cookies = document.cookie.split(';');\r\n      for (let i = 0; i < cookies.length; i++) {\r\n          const cookie = cookies[i].trim();\r\n          // Does this cookie string begin with the name we want?\r\n          if (cookie.substring(0, name.length + 1) === (name + '=')) {\r\n              cookieValue = decodeURIComponent(cookie.substring(name.length + 1));\r\n              break;\r\n          }\r\n      }\r\n  }\r\n  return cookieValue;\r\n}","import React, {useContext} from 'react';\r\nimport {UserContext} from '../context';\r\n\r\nimport NavbarComponent from 'react-bootstrap/Navbar';\r\nimport Nav from 'react-bootstrap/Nav';\r\n\r\nfunction Navbar(props) {\r\n  let {dataset} = useContext(UserContext);\r\n\r\n  return (\r\n    <NavbarComponent bg=\"primary\" variant=\"dark\" className=\"mb-3\">\r\n      <NavbarComponent.Brand href=\"#home\">Dj Tweet</NavbarComponent.Brand>\r\n      <Nav className=\"mr-auto\">\r\n        <Nav.Link href=\"/\">Home</Nav.Link>\r\n        <Nav.Link href=\"/users\">Users</Nav.Link>\r\n      </Nav>\r\n      <Nav>\r\n        {\r\n          dataset.username ?\r\n          <Nav.Link href=\"/logout\">Logout [{dataset.username}]</Nav.Link> \r\n          :\r\n          <>\r\n            <Nav.Link href=\"/login\">Login</Nav.Link>\r\n            <Nav.Link href=\"/register\">Register</Nav.Link>\r\n          </>\r\n        }\r\n      </Nav>\r\n    </NavbarComponent>\r\n  );\r\n}\r\n\r\nexport default Navbar;","import React from 'react';\r\n\r\nimport Form from 'react-bootstrap/Form';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\n\r\n\r\nfunction CreateTweetForm(props) {\r\n  let value = props.value; \r\n  return (\r\n    <Row>\r\n      <Col xs={10} lg={8} className=\"mx-auto mb-5 px-0\">\r\n        <Form onSubmit={props.handleTweetAdd}>\r\n          <Form.Group controlId=\"exampleForm.ControlTextarea1\">\r\n            <Form.Label>Create New Tweet:</Form.Label>\r\n            <Form.Control as=\"textarea\" rows=\"3\" value={value} onChange={(e)=>{\r\n              props.handleTextArea(e);\r\n            }} />\r\n          </Form.Group>\r\n          <Button variant=\"primary\" type=\"submit\">\r\n            Submit\r\n          </Button>\r\n        </Form>\r\n      </Col>\r\n    </Row>\r\n  );\r\n}\r\n\r\nexport default CreateTweetForm;","import React from 'react';\r\n\r\nimport styled from 'styled-components';\r\n\r\nimport Col from 'react-bootstrap/Col';\r\nimport ButtonGroup from 'react-bootstrap/ButtonGroup';\r\nimport Button from 'react-bootstrap/Button';\r\n\r\nfunction Tweet(props) {\r\n  // This component needs: \r\n  // 1. dataset\r\n  // 2. tweet itself\r\n  // 3. handleLikeClick\r\n  // 4. handleDeleteClick\r\n\r\n  let dataset = props.dataset; \r\n  let tweet = props.tweet; \r\n  let original = props.tweet.original;\r\n  let openModal = props.openModal;\r\n\r\n  const handleRetweet = (id) => {\r\n    openModal(id);\r\n  }\r\n  \r\n  return (\r\n    <Col xs={10} lg={8} className=\"mx-auto border border-success py-3 mb-3\">\r\n      <div className='media'>\r\n        <img src={tweet.owner.avatar} className=\"mr-3\" alt=\"avatar\" />\r\n        <div className=\"media-body\">\r\n          <div>\r\n            <a href={'/' + tweet.owner.username} className=\"mt-0 text-info\">{tweet.owner.username}</a>\r\n          </div>\r\n          {tweet.content}\r\n          {original && \r\n            <>          \r\n              <div className=\"media mt-3 border border-primary p-3 mb-3\">\r\n                <img src={original.owner.avatar} className=\"mr-3\" alt=\"avatar\" />\r\n                <div className=\"media-body d-flex flex-column align-items-start\">\r\n                  <div>\r\n                    <a href={'/' + original.owner.username} className=\"mt-0 text-info\">{original.owner.username}</a>\r\n                  </div>\r\n                  {original.content}\r\n                  <ButtonGroup aria-label=\"Basic example\" className=\"mt-1\">\r\n                    <StyledButton variant={original.likes.user_liked ? 'info' : 'primary'} size=\"sm\" onClick={()=>{\r\n                      props.handleLikeClick(original.id)\r\n                    }}>Like {original.likes.likes}</StyledButton>\r\n                    <StyledButton variant=\"success\" onClick={()=> {handleRetweet(original.id)}}>Retweet</StyledButton>\r\n                    {(dataset.page === 'home' || dataset.page === 'user') && <a href={'/' + tweet.original.id} className=\"btn btn-outline-info\">Comments</a>}\r\n                  </ButtonGroup>\r\n                </div>\r\n              </div>\r\n            </>}    \r\n        </div>\r\n      </div>\r\n      <ButtonGroup aria-label=\"Basic example\">\r\n        <StyledButton variant={tweet.likes.user_liked ? 'info' : 'primary'} onClick={()=>{props.handleLikeClick(tweet.id)}}>Like {tweet.likes.likes}</StyledButton>\r\n        <StyledButton variant=\"success\" onClick={()=> {handleRetweet(tweet.id)}}>Retweet</StyledButton>\r\n        {(dataset.page === 'home' || dataset.page === 'user') && <a href={'/' + tweet.id} className=\"btn btn-outline-info\">Commments</a>}\r\n        {(dataset.page === 'detail') && (tweet.owner.username === dataset.username) && <StyledButton variant=\"danger\" onClick={props.handleDeleteClick.bind(null, tweet.id)}>Delete</StyledButton>}\r\n      </ButtonGroup>\r\n    </Col>\r\n  );\r\n}\r\n\r\nconst StyledButton = styled(Button)`\r\n  // background-color: red; \r\n`\r\n\r\nexport default Tweet;\r\n","import React, {useEffect, useState} from 'react';\r\n\r\nimport Col from 'react-bootstrap/Col';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Form from 'react-bootstrap/Form';\r\n\r\nfunction Profile(props) {\r\n  let dataset = props.dataset;\r\n  let username = dataset.feedOwner || dataset.username;\r\n  const [profileData, setProfileData] = useState({});\r\n\r\n  const handleFollow = (e) => {\r\n    fetch(`api/accounts/adjust-followers/${dataset.feedOwner}/`, {\r\n      method: \"POST\", \r\n      headers: {\r\n        'HTTP_X_REQUESTED_WITH': 'XMLHttpRequest',\r\n        'X-Requested-With': 'XMLHttpRequest',\r\n        'X-CSRFToken': getCookie('csrftoken'),\r\n      },\r\n    })\r\n      .then(response => {\r\n        if (response.ok) return response.json();\r\n        else {throw new Error('Something went wrong!');};\r\n      })\r\n      .then(data => {\r\n        setProfileData(data);\r\n      })\r\n      .catch(err => {console.log(err)})\r\n  }\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    let data = new FormData(e.target);\r\n    fetch(`api/accounts/${username}/`, {\r\n      method: 'POST', \r\n      headers: {\r\n        'HTTP_X_REQUESTED_WITH': 'XMLHttpRequest',\r\n        'X-Requested-With': 'XMLHttpRequest',\r\n        'X-CSRFToken': getCookie('csrftoken'),\r\n      }, \r\n      body: data,\r\n    })\r\n    .then(response => {\r\n      if (response.ok) return response.json();\r\n      else {throw new Error('Something went wrong!');};\r\n    })\r\n    .then(data => {\r\n      console.log(data);\r\n    })\r\n    .catch(err => {console.log(err)}) \r\n  }\r\n\r\n  useEffect(() => {\r\n    fetch(`api/accounts/${username}/`)\r\n      .then(response => {\r\n        if (response.ok) return response.json();\r\n        else {throw new Error('Something went wrong!');};\r\n      })\r\n      .then(data => {\r\n        setProfileData(data);\r\n      })\r\n      .catch(err => {console.log(err)})\r\n  }, [username])\r\n\r\n\r\n  if (profileData.user){\r\n    let isFollower = profileData.followerings.followers.includes(dataset.username);\r\n\r\n    let editableInfo = (\r\n      <Col xs={5} lg={4} className=\"px-0 bg-primary\">\r\n        <Form className=\"px-2\" onSubmit={handleSubmit}>\r\n          <Form.Group controlId=\"formBasicUsername\">\r\n            <Form.Label>Username</Form.Label>\r\n            <Form.Control type=\"text\" name=\"username\" defaultValue={profileData.user.username}/>\r\n          </Form.Group>\r\n\r\n          <Form.Group controlId=\"formBasicFirstName\">\r\n            <Form.Label>First Name</Form.Label>\r\n            <Form.Control type=\"text\" name=\"firstName\" defaultValue={profileData.user.first_name}/>\r\n          </Form.Group>\r\n          \r\n          <Form.Group controlId=\"formBasicLastName\">\r\n            <Form.Label>Last Name</Form.Label>\r\n            <Form.Control type=\"text\" name=\"lastName\" defaultValue={profileData.user.last_name}/>\r\n          </Form.Group>\r\n          \r\n          <Form.Group controlId=\"formBasicEmail\">\r\n            <Form.Label>Email address</Form.Label>\r\n            <Form.Control type=\"email\" name=\"email\" defaultValue={profileData.user.email}/>\r\n          </Form.Group>\r\n\r\n          <Form.Group controlId=\"formBasicBio\">\r\n            <Form.Label>Bio</Form.Label>\r\n            <Form.Control type=\"text\" name=\"bio\" defaultValue={profileData.bio}/>\r\n          </Form.Group>\r\n\r\n          <Form.Group controlId=\"formBasicLocation\">\r\n            <Form.Label>Location</Form.Label>\r\n            <Form.Control type=\"text\" name=\"location\" defaultValue={profileData.location}/>\r\n          </Form.Group>\r\n\r\n\r\n          <Button variant=\"info\" type=\"submit\">\r\n            Submit\r\n          </Button>\r\n        </Form>\r\n      </Col>\r\n    )\r\n\r\n    let info = (\r\n      <Col xs={5} lg={4} className=\"px-0 bg-primary\">\r\n        Showing tweets of &gt;&gt; <span className=\"text-white\">{username}</span>\r\n        <div className=\"names\">\r\n          {profileData.user.first_name} {profileData.user.last_name} \r\n        </div>\r\n\r\n        {profileData.bio && <div className=\"bio\">{profileData.bio}</div>}\r\n        {profileData.location && <div className=\"location\">{profileData.location}</div>}\r\n        {(dataset.page === 'user') && \r\n          <Button variant={isFollower ? 'danger' : 'success'} onClick={handleFollow}>\r\n            {isFollower ? 'Unfollow' : 'Follow'}\r\n          </Button>\r\n        }\r\n      </Col>\r\n    )\r\n\r\n    return (\r\n      <Row className=\"d-flex justify-content-center mb-5\">\r\n        <Col xs={5} lg={4} className=\"px-0 bg-primary\">\r\n          <div className=\"followers\">Followers: {profileData.followerings.followers.length}</div>\r\n          <div className=\"following\">Following: {profileData.followerings.following.length}</div>\r\n        </Col>\r\n        {dataset.page === 'home' ? editableInfo : info}\r\n      </Row>\r\n    );\r\n  }else {\r\n    return <div>Loading...</div>\r\n  }\r\n}\r\n\r\nexport default Profile;\r\n\r\n\r\n// OTHER FUNCTIONS, CONSIDER CREATING UTILS.JS\r\nfunction getCookie(name) {\r\n  let cookieValue = null;\r\n  if (document.cookie && document.cookie !== '') {\r\n      const cookies = document.cookie.split(';');\r\n      for (let i = 0; i < cookies.length; i++) {\r\n          const cookie = cookies[i].trim();\r\n          // Does this cookie string begin with the name we want?\r\n          if (cookie.substring(0, name.length + 1) === (name + '=')) {\r\n              cookieValue = decodeURIComponent(cookie.substring(name.length + 1));\r\n              break;\r\n          }\r\n      }\r\n  }\r\n  return cookieValue;\r\n}","import React, {useContext, useState} from 'react';\r\nimport {UserContext} from '../context';\r\n\r\nimport Paginator from 'react-bootstrap/Pagination'; \r\n\r\nfunction Pagination(props) {\r\n  const [current, setCurrent] = useState(1);\r\n  let {next, prev, count, fetchSomeTweets, tweetsPerPage} = useContext(UserContext);\r\n  let numberOfPages = Math.ceil(count / tweetsPerPage);\r\n  \r\n  const handleNextPrev = (e) => {\r\n    let target = e.target.closest('[role=\"button\"]');\r\n    let endpoint = target.dataset.func === 'next' ? next : prev; \r\n    fetchSomeTweets(endpoint);\r\n    if (target.dataset.func === 'next'){\r\n      setCurrent(prevState => prevState + 1);\r\n    } else {\r\n      setCurrent(prevState => prevState - 1);\r\n    }\r\n  }\r\n\r\n  const handleFirstLast = (e) => {\r\n    e.preventDefault();\r\n    let endpoint = next ? next : prev;\r\n    let target = e.target.closest('[role=\"button\"]');\r\n    let whereTo = target.dataset.func === 'last' ? 'last' : 'first'; \r\n\r\n    if (whereTo === 'last'){\r\n      // should have used regex, cuz the point being is \r\n      // whatever page was there it needs to be replaced\r\n      // with numberOfPages\r\n      let pageNum = endpoint[endpoint.indexOf('/?page=') + 7];\r\n      endpoint = endpoint.replace(`/?page=${pageNum}`, `/?page=${numberOfPages}`);\r\n    } else {\r\n      // because we won't get /?page=1, instead it will be\r\n      // just api/tweets/, so there's no point to append 1\r\n      if (endpoint.includes('/?page')){\r\n        let pageNum = endpoint[endpoint.indexOf('/?page=') + 7];\r\n        endpoint = endpoint.replace(`/?page=${pageNum}`, `/?page=${1}`);\r\n      } else {\r\n        endpoint = prev;\r\n      }\r\n    }\r\n\r\n    fetchSomeTweets(endpoint);\r\n\r\n    if (whereTo === 'first'){\r\n      setCurrent(1);\r\n    } else {\r\n      setCurrent(numberOfPages);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"d-flex justify-content-center\">\r\n      <Paginator>\r\n        <Paginator.First onClick={handleFirstLast} data-func=\"first\" disabled={current === 1} />\r\n        <Paginator.Prev onClick={handleNextPrev} data-func=\"prev\" disabled={prev === null} />\r\n        <Paginator.Item active>{current}</Paginator.Item>\r\n        <Paginator.Next onClick={handleNextPrev} data-func=\"next\" disabled={next === null} />\r\n        <Paginator.Last onClick={handleFirstLast} data-func=\"last\" disabled={current === numberOfPages} />\r\n      </Paginator>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Pagination;\r\n","import React, {useContext} from 'react';\r\nimport { UserContext } from '../context';\r\n\r\nimport CreateTweetForm from '../components/CreateTweetForm';\r\nimport Tweet from '../components/Tweet';\r\nimport Profile from '../components/Profile';\r\nimport Pagination from '../components/Pagination';\r\n\r\nimport Container from 'react-bootstrap/Container';\r\nimport Row from 'react-bootstrap/Row';\r\n\r\nfunction Home(props) {\r\n  let {\r\n    dataset, handleLikeClick, \r\n    handleTweetAdd, handleTextArea, \r\n    value, tweets, count, \r\n    tweetsPerPage, openModal\r\n  } = useContext(UserContext);\r\n\r\n  let content = (\r\n    <>\r\n      <Profile dataset={dataset}/>\r\n      {dataset.canTweet === 'true' && \r\n      <CreateTweetForm \r\n        value={value} \r\n        handleTextArea={handleTextArea} \r\n        handleTweetAdd={handleTweetAdd}\r\n      />}\r\n      <Row>\r\n        {tweets.map(tweet => \r\n          <Tweet\r\n            key={tweet.id} \r\n            tweet={tweet} \r\n            handleLikeClick={handleLikeClick}\r\n            dataset={dataset}\r\n            openModal={openModal}\r\n          /> \r\n        )}\r\n      </Row>\r\n      {count > tweetsPerPage && <Pagination />}\r\n    </>\r\n  )\r\n\r\n  // may be deleted\r\n  let login = <div>Hello, thanks for jumping in. Please, consider logging in to see the content!</div>\r\n\r\n  return (\r\n    <Container>\r\n      {dataset.username ? content : login}\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default Home;","import React, {useContext} from 'react';\r\nimport Tweet from '../components/Tweet';\r\nimport { UserContext } from '../context';\r\n\r\nfunction Detail(props) {\r\n\r\n  let {\r\n    dataset, tweets, \r\n    handleLikeClick,\r\n    handleDeleteClick, openModal,\r\n  } = useContext(UserContext);\r\n\r\n  let toRender = tweets.length ? <Tweet\r\n    tweet={tweets[0]} \r\n    openModal={openModal}\r\n    handleLikeClick={handleLikeClick}\r\n    handleDeleteClick={handleDeleteClick}\r\n    dataset={dataset}\r\n  /> : <div>Loading</div>\r\n\r\n  return toRender;\r\n}\r\n\r\nexport default Detail;","import React from 'react';\r\n\r\nfunction User(props) {\r\n  let user = props.user;\r\n  return (\r\n    <div className=\"card mb-5 border-primary\">\r\n      <div className=\"card-body\">\r\n        <a href={'/' + user.username}><h5 className=\"mt-0 mb-2\">@{user.username}</h5></a>\r\n        <li className=\"media\">\r\n          <img src={user.profile.avatar} className=\"mr-3\" alt=\"avatar\" />\r\n          <div className=\"media-body\">\r\n            <p>Full Name: {user.first_name + ' ' + user.last_name}</p>\r\n            <p>Location: {user.profile.location}</p>\r\n            <p>Bio: {user.profile.bio}</p>\r\n          </div>\r\n        </li>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default User;","import React, { useEffect, useState } from 'react';\r\nimport User from '../components/User';\r\nimport Container from 'react-bootstrap/Container';\r\n\r\nfunction Users(props) {\r\n\r\n  const [users, setUsers] = useState([]);\r\n\r\n  useEffect(()=>{\r\n    fetch('api/accounts/users_list')\r\n      .then(response => {\r\n        if (response.ok){\r\n          return response.json();\r\n        } else {\r\n          throw new Error('something went wrong!');\r\n        }\r\n      })\r\n      .then(data => {\r\n        setUsers(data);\r\n      })\r\n      .catch(err => {console.log(err);})\r\n  }, [])\r\n\r\n  return (\r\n    <Container>\r\n      <h2 className=\"text-center\">Present all the registered users so far</h2>\r\n      <ul className=\"list-unstyled\">\r\n        {users.map(user => <User key={user.username} user={user} />)}\r\n      </ul>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default Users;","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nimport Container from 'react-bootstrap/Container'; \r\nimport Button from 'react-bootstrap/Button';\r\n\r\nfunction ErrorPage(props) {\r\n  \r\n  return (\r\n    <StyledContainer>\r\n      <h4>Oops! This page Could Not Be Found!</h4>\r\n      <img src=\"/media/error.png\" alt=\"Error\"/>\r\n      <p>&lt; {props.message} /&gt;</p>\r\n      <Button href=\"/\" variant=\"primary\">Go to homepage</Button>\r\n    </StyledContainer>\r\n  );\r\n}\r\n\r\nexport default ErrorPage;\r\n\r\nconst StyledContainer = styled(Container)`\r\n  background-color: lightblue;\r\n  display: flex; \r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: space-betweet;\r\n  padding: 3rem 0;\r\n  color: white;\r\n\r\n  p{\r\n    color: black;\r\n  }\r\n`","import React from 'react';\r\n\r\nimport Alert from 'react-bootstrap/Alert';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Row from 'react-bootstrap/Row';\r\n\r\nfunction Notification(props) {\r\n  return (\r\n    <Container>\r\n      <Row>\r\n        <Col xs={10} lg={8} className=\"mx-auto px-0\">\r\n          <Alert variant={props.notVariant}>\r\n            {props.notification}\r\n          </Alert>\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default Notification;","import React, {useState} from 'react';\r\n\r\nimport Modal from 'react-bootstrap/Modal'\r\nimport Button from 'react-bootstrap/Button'\r\nimport Form from 'react-bootstrap/Form'\r\n\r\nfunction ModalRetweet(props) {\r\n  // all you need you can take from the context brooo\r\n  // console.log(props.retweetingtweet);\r\n  let tweet = props.retweetingtweet;\r\n  let handleRetweet = props.handleRetweet;\r\n  let {show, onHide} = props;\r\n\r\n  const [value, setValue] = useState('');\r\n\r\n  let content = tweet ? (\r\n    <Modal\r\n    show={show}\r\n    onHide={onHide}\r\n    size=\"lg\"\r\n    aria-labelledby=\"contained-modal-title-vcenter\"\r\n    centered\r\n  >\r\n    <Modal.Header closeButton>\r\n      <Modal.Title id=\"contained-modal-title-vcenter\">\r\n        Retweeting\r\n      </Modal.Title>\r\n    </Modal.Header>\r\n    <Modal.Body>\r\n      <Form>\r\n        <Form.Group controlId=\"exampleForm.ControlTextarea1\">\r\n          <Form.Label>Add Retweet Comment:</Form.Label>\r\n          <Form.Control as=\"textarea\" rows=\"3\" value={value} onChange={(e)=>{setValue(e.target.value)}} />\r\n        </Form.Group>\r\n      </Form>\r\n      <div className='media'>\r\n        <img src={tweet.owner.avatar} className=\"mr-3\" alt=\"avatar\" />\r\n        <div className=\"media-body\">\r\n          <div>\r\n            <a href={'/' + tweet.owner.username} className=\"mt-0 text-info\">{tweet.owner.username}</a>\r\n          </div>\r\n          {tweet.content} \r\n        </div>\r\n      </div>\r\n    </Modal.Body>\r\n\r\n    <Modal.Footer>\r\n      <Button onClick={props.onHide} variant=\"danger\">Cancel</Button>\r\n      <Button onClick={() => {handleRetweet(tweet.id, value)}} variant=\"success\">Retweet</Button>\r\n    </Modal.Footer>\r\n  </Modal>\r\n  ) : null;\r\n\r\n  return content;\r\n}\r\n\r\nexport default ModalRetweet;","import React, {useContext} from 'react';\nimport { UserContext } from './context';\nimport Navbar from './components/Navbar';\nimport Home from './pages/Home';\nimport Detail from './pages/Detail';\nimport Users from './pages/Users';\nimport ErrorPage from './pages/ErrorPage';\nimport Notification from './components/Notification';\nimport ModalRetweet from './components/ModalRetweet';\n\nfunction App(props) {\n  // message - comes with 404 only\n  // notification - retweet, delete and etc\n  let {dataset: {page, message}, show, \n      closeModal, retweetingTweet,\n      handleRetweet, notification, \n      notVariant} = useContext(UserContext); \n  \n\n  return(\n    <>\n      <Navbar />\n      {notification && <Notification notification={notification} notVariant={notVariant}/>}\n      {page === 'detail' && <Detail />}\n      {page === 'users' && <Users />}\n      {(page === 'home' || page === 'user')  && <Home />}\n      {page === 'error' && <ErrorPage message={message}/>}\n      <ModalRetweet show={show} onHide={closeModal} retweetingtweet={retweetingTweet} handleRetweet={handleRetweet}/>\n    </>\n  )\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport UserContextProvider from './context';\r\n\r\n// need to get an element first, and assign it to a vatiable\r\n// to get its dataset values\r\n// to let the context know what endpoint should it fetch to\r\nlet reactPage = document.getElementById('root');\r\n\r\n// reactPage will be null if it's login or register\r\n// cuz django handles registration and login by itself\r\nif (reactPage){\r\n  ReactDOM.render(\r\n    // we should consider moving context to the App, cuz there're some component\r\n    // which don't need the context value at all\r\n    <UserContextProvider {...reactPage.dataset}>\r\n      <App />\r\n    </UserContextProvider>,\r\n    reactPage\r\n  );\r\n}\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}