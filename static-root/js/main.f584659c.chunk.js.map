{"version":3,"sources":["context.js","components/Navbar.js","components/CreateTweetForm.js","components/Tweet.js","components/Profile.js","components/Pagination.js","pages/Home.js","pages/Detail.js","components/User.js","pages/Users.js","App.js","serviceWorker.js","index.js"],"names":["UserContext","React","createContext","UserContextProvider","props","state","dataset","username","canTweet","page","tweetId","feedOwner","value","tweets","prev","next","count","tweetsPerPage","handleRetweet","bind","handleTweetAdd","handleLikeClick","handleDeleteClick","handleTextArea","fetchSomeTweets","this","forceEndpoint","endpoint","fetch","then","response","ok","json","Error","data","results","previous","Array","isArray","setState","window","scrollTo","catch","err","console","log","message","e","preventDefault","content","method","headers","getCookie","body","JSON","stringify","newTweet","id","action","updatingTweet","length","find","tweet","likes","user_liked","original","currentTweet","newLikes","deepStateTweetsCopy","parse","currentTweetAsOriginal","filter","tweetContainsOriginal","target","Provider","children","Component","name","cookieValue","document","cookie","cookies","split","i","trim","substring","decodeURIComponent","Navbar","useContext","bg","variant","className","Brand","href","Nav","Link","CreateTweetForm","Row","Col","xs","lg","Form","onSubmit","Group","controlId","Label","Control","as","rows","onChange","Button","type","StyledButton","styled","Tweet","owner","ButtonGroup","aria-label","onClick","Profile","useState","profileData","setProfileData","useEffect","user","isFollower","followerings","followers","includes","editableInfo","FormData","defaultValue","first_name","last_name","email","bio","location","info","following","Pagination","current","setCurrent","numberOfPages","Math","ceil","handleNextPrev","closest","func","prevState","handleFirstLast","whereTo","pageNum","indexOf","replace","First","data-func","disabled","Prev","Item","active","Next","Last","Home","map","key","login","Container","Detail","User","src","alt","profile","class","Users","users","setUsers","App","Boolean","hostname","match","reactPage","getElementById","ReactDOM","render","navigator","serviceWorker","ready","registration","unregister","error"],"mappings":"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","file":"static/js/main.f584659c.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nexport const UserContext = React.createContext();\r\n\r\nclass UserContextProvider extends React.Component{\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      dataset: {\r\n        username: props.username, \r\n        canTweet: props.canTweet,\r\n        page: props.page,\r\n        tweetId: props.tweetId,\r\n        feedOwner: props.feedOwner\r\n      },\r\n      value: '', //maybe later on value will be somewhere else ? \r\n      tweets: [],\r\n      prev: '', \r\n      next: '', \r\n      count: 0,\r\n      tweetsPerPage: 15,\r\n    }\r\n    this.handleRetweet = this.handleRetweet.bind(this);\r\n    this.handleTweetAdd = this.handleTweetAdd.bind(this);\r\n    this.handleLikeClick = this.handleLikeClick.bind(this);\r\n    this.handleDeleteClick = this.handleDeleteClick.bind(this);\r\n    this.handleTextArea = this.handleTextArea.bind(this);\r\n    this.fetchSomeTweets = this.fetchSomeTweets.bind(this);\r\n  }\r\n\r\n  \r\n  componentDidMount(){\r\n    if (this.state.dataset.username){\r\n      this.fetchSomeTweets();\r\n    }\r\n  }\r\n  \r\n  fetchSomeTweets(forceEndpoint=null){\r\n    // default endpoint for home page\r\n    let endpoint = '/api/tweets';\r\n    \r\n    // forceEndpoint servers to paginate\r\n    if (!forceEndpoint){\r\n      if (this.state.dataset.page === 'user'){\r\n        // if django passes username\r\n        endpoint += `/?username=${this.state.dataset.feedOwner}`;\r\n      } else if (this.state.dataset.page === 'detail'){\r\n        // if django passes tweetid\r\n        endpoint += `/${this.state.dataset.tweetId}`;\r\n      }\r\n    } else {\r\n      // next or prev btn click\r\n      endpoint = forceEndpoint;\r\n    }\r\n\r\n    fetch(endpoint)\r\n      .then(response => {\r\n        if (response.ok){\r\n          return response.json()\r\n        } else {\r\n          throw new Error('Something went wrong!');\r\n        }\r\n      })\r\n      .then(data => {\r\n        // temp, for pagination\r\n        if (data.results){\r\n          let prev = data.previous;\r\n          let next = data.next; \r\n          let count = data.count;\r\n          data = data.results\r\n  \r\n          if (!Array.isArray(data)){\r\n            this.setState({tweets: [data]});\r\n          } else {\r\n            this.setState({tweets: data, prev, next, count});\r\n          };\r\n        } else {\r\n          // the condition below will be met, if detailed view requested a tweet\r\n          if (!Array.isArray(data)){\r\n            this.setState({tweets: [data]});\r\n          } else {\r\n            this.setState({tweets: data});\r\n          };\r\n        }\r\n        window.scrollTo(0,0);\r\n      })\r\n      .catch(err => {\r\n        console.log(err.message);\r\n      })\r\n  }\r\n\r\n  //basically it's a form, so you could have used FormData\r\n  //but it's just a field, so json is okay\r\n  handleTweetAdd(e){\r\n    e.preventDefault(); \r\n    let data = {content: this.state.value};\r\n    fetch('/api/tweets/add-tweet', {\r\n      method: \"POST\", \r\n      headers: {\r\n        'HTTP_X_REQUESTED_WITH': 'XMLHttpRequest',\r\n        'X-Requested-With': 'XMLHttpRequest',\r\n        'X-CSRFToken': getCookie('csrftoken'),\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify(data),\r\n    }).then(response => {\r\n        if (response.ok){\r\n          return response.json()\r\n        }else{\r\n          throw new Error('Something went wrong!');\r\n        }\r\n      })\r\n      .then(newTweet => {\r\n        let tweets = [newTweet, ...this.state.tweets];\r\n        this.setState({tweets, value: ''});\r\n      })\r\n      .catch(err => {\r\n        console.log(err);\r\n      })\r\n  }\r\n\r\n  // you need to fix that, cuz when you're retweing someone else's tweets \r\n  // they're prepending to someone else's feed which is bad\r\n  handleRetweet(id){\r\n    let action = 'retweet';\r\n    fetch(`/api/tweets/tweet-action/${id}`, {\r\n      method: \"POST\", \r\n      headers: {\r\n        'HTTP_X_REQUESTED_WITH': 'XMLHttpRequest',\r\n        'X-Requested-With': 'XMLHttpRequest',\r\n        'X-CSRFToken': getCookie('csrftoken'),\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify({action}), \r\n    }).then(response => {\r\n      if (response.ok){\r\n        return response.json()\r\n      }else {\r\n        throw new Error('something went wrong!');\r\n      }\r\n    }).then(newTweet => {\r\n      // what it means is we need to prepend new retweet only if its user's own feed\r\n      // this is true only if a user on his home page\r\n      if (this.state.dataset.page === 'home'){\r\n        let tweets = [newTweet, ...this.state.tweets];\r\n        this.setState({tweets});\r\n      } else {\r\n        // paste a message that the tweet was retweeted; \r\n        console.log('Tweet was successfully retweeted!');\r\n      }\r\n    }).catch(err => {\r\n      console.log(err);\r\n    })\r\n  }\r\n\r\n  handleDeleteClick(id){\r\n    let action = 'delete'; \r\n    fetch(`/api/tweets/${id}`, {\r\n      method: \"DELETE\", \r\n      headers: {\r\n        'HTTP_X_REQUESTED_WITH': 'XMLHttpRequest',\r\n        'X-Requested-With': 'XMLHttpRequest',\r\n        'X-CSRFToken': getCookie('csrftoken'),\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify({action}), \r\n    }).then(response => {\r\n      if (response.ok){\r\n        return response.json()\r\n      }else {\r\n        throw new Error('something went wrong!');\r\n      }\r\n    })\r\n    .then(data => {\r\n      console.log(data);\r\n    })\r\n    .catch(err => {\r\n      console.log(err);\r\n    })\r\n  }\r\n\r\n  handleLikeClick(id){\r\n    // toDo: I should consider reduce the amount of ifs statements and make a solid single logic\r\n    // works if we have all the tweets in the state\r\n    let action; \r\n    let updatingTweet; \r\n    let theTweet;\r\n    if (this.state.tweets.length > 1){\r\n      // we have many tweets\r\n      // but even though we have many tweets, we could have a retweet\r\n      // which is not in the state, and we need to like the tweet anyway!\r\n\r\n      if (this.state.tweets.find(tweet => tweet.id === id)){\r\n        // maybe we're liking our own tweet\r\n        theTweet = this.state.tweets.find(tweet => tweet.id === id);\r\n        action = theTweet.likes.user_liked ? 'dislike' : 'like';\r\n      } else {\r\n        // otherwise, we're liking one's original tweet\r\n        theTweet = this.state.tweets.find(tweet => {\r\n          if (tweet.original){\r\n            return tweet.original.id === id\r\n          } \r\n          return false;\r\n        });\r\n        action = theTweet.original.likes.user_liked ? 'dislike' : 'like';\r\n      }\r\n\r\n    } else {\r\n      // we have only one tweet in the state\r\n      console.log(id);\r\n\r\n      if (this.state.tweets[0].id === id){\r\n        // liking the main tweet\r\n        action = this.state.tweets[0].likes.user_liked ? 'dislike' : 'like';\r\n        updatingTweet = 'main';\r\n      } else {\r\n        // liking the parent tweet\r\n        action = this.state.tweets[0].original.likes.user_liked ? 'dislike' : 'like';\r\n        updatingTweet = 'original';\r\n      }\r\n    }\r\n\r\n\r\n    fetch(`/api/tweets/tweet-action/${id}`, {\r\n      method: \"POST\", \r\n      headers: {\r\n        'HTTP_X_REQUESTED_WITH': 'XMLHttpRequest',\r\n        'X-Requested-With': 'XMLHttpRequest',\r\n        'X-CSRFToken': getCookie('csrftoken'),\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify({action}), \r\n    }).then(response => {\r\n      if (response.ok){\r\n        return response.json()\r\n      }else {\r\n        throw new Error('something went wrong!');\r\n      }\r\n    }).then(data => {\r\n      // data => the amount of new likes\r\n      let newLikes = data.likes; \r\n\r\n      // [!] need a deep copy of the state, because we will change the amount of likes right in the object\r\n      let deepStateTweetsCopy = JSON.stringify(this.state.tweets);\r\n      deepStateTweetsCopy = JSON.parse(deepStateTweetsCopy);\r\n\r\n      // if there's only one tweet in the state, there's nothing left to update but itself\r\n      if (this.state.dataset.page === 'detail'){\r\n        if (updatingTweet === 'main'){\r\n          deepStateTweetsCopy[0].likes.likes = newLikes; \r\n          deepStateTweetsCopy[0].likes.user_liked = !deepStateTweetsCopy[0].likes.user_liked; \r\n        } else {\r\n          deepStateTweetsCopy[0].original.likes.likes = newLikes; \r\n          deepStateTweetsCopy[0].original.likes.user_liked = !deepStateTweetsCopy[0].original.likes.user_liked; \r\n        }\r\n        this.setState({tweets: deepStateTweetsCopy})\r\n        return;\r\n      }\r\n\r\n      // find the tweet, likes amount of which, are being changed\r\n      let currentTweet;\r\n      // it can be original tweet itself in one place\r\n      if (deepStateTweetsCopy.find(tweet => tweet.id === id)){\r\n        currentTweet = deepStateTweetsCopy.find(tweet => tweet.id === id);\r\n        //change original tweet's likes\r\n        // console.log(currentTweet);\r\n        currentTweet.likes.likes = newLikes; \r\n        currentTweet.likes.user_liked = !currentTweet.likes.user_liked;\r\n\r\n        // I have to check if the tweet is also somewhere else on the page: \r\n        let currentTweetAsOriginal = deepStateTweetsCopy.filter(tweet => {\r\n          if (tweet.original){\r\n            return tweet.original.id === id;\r\n          };\r\n          return false;\r\n        });\r\n\r\n        // if there're any\r\n        if (currentTweetAsOriginal){\r\n          for (let tweetContainsOriginal of currentTweetAsOriginal){\r\n            tweetContainsOriginal.original.likes.likes = newLikes; \r\n            tweetContainsOriginal.original.likes.user_liked = !tweetContainsOriginal.original.likes.user_liked; \r\n          }\r\n        }\r\n      } else {\r\n        // or it can be found at .original in multiple places\r\n        let currentTweetAsOriginal = deepStateTweetsCopy.filter(tweet => {\r\n          if (tweet.original){\r\n            return tweet.original.id === id;\r\n          };\r\n          return false;\r\n        });\r\n\r\n        // if there're any\r\n        if (currentTweetAsOriginal){\r\n          for (let tweetContainsOriginal of currentTweetAsOriginal){\r\n            tweetContainsOriginal.original.likes.likes = newLikes; \r\n            tweetContainsOriginal.original.likes.user_liked = !tweetContainsOriginal.original.likes.user_liked; \r\n          }\r\n        }\r\n      }\r\n    \r\n      // finally, rerendering the updated tweets\r\n      this.setState({tweets: deepStateTweetsCopy})\r\n    }).catch(err => {\r\n      console.log(err);\r\n    })\r\n  }\r\n\r\n  handleTextArea(e){\r\n    let value = e.target.value; \r\n    this.setState({value});\r\n  }\r\n\r\n  render(){\r\n    return(\r\n      // so, basically value={{...this.state}} doesn't make a deep copy, \r\n      // but the good thing is Im not changing state anywhere else but here\r\n      <UserContext.Provider \r\n        value={{\r\n          ...this.state, \r\n          handleLikeClick: this.handleLikeClick, \r\n          handleTweetAdd: this.handleTweetAdd, \r\n          handleRetweet: this.handleRetweet, \r\n          handleTextArea: this.handleTextArea,\r\n          handleDeleteClick: this.handleDeleteClick,\r\n          fetchSomeTweets: this.fetchSomeTweets,\r\n        }}\r\n      >\r\n\r\n        {this.props.children}\r\n      </UserContext.Provider>\r\n    )\r\n  }\r\n}\r\n\r\nexport default UserContextProvider;\r\n\r\n\r\n// OTHER FUNCTIONS, ALSO GOOD FOR UTILS AND STUFF\r\nfunction getCookie(name) {\r\n  let cookieValue = null;\r\n  if (document.cookie && document.cookie !== '') {\r\n      const cookies = document.cookie.split(';');\r\n      for (let i = 0; i < cookies.length; i++) {\r\n          const cookie = cookies[i].trim();\r\n          // Does this cookie string begin with the name we want?\r\n          if (cookie.substring(0, name.length + 1) === (name + '=')) {\r\n              cookieValue = decodeURIComponent(cookie.substring(name.length + 1));\r\n              break;\r\n          }\r\n      }\r\n  }\r\n  return cookieValue;\r\n}","import React, {useContext} from 'react';\r\nimport {UserContext} from '../context';\r\n\r\nimport NavbarComponent from 'react-bootstrap/Navbar';\r\nimport Nav from 'react-bootstrap/Nav';\r\n\r\nfunction Navbar(props) {\r\n  let {dataset} = useContext(UserContext);\r\n\r\n  return (\r\n    <NavbarComponent bg=\"primary\" variant=\"dark\" className=\"mb-5\">\r\n      <NavbarComponent.Brand href=\"#home\">Dj Tweet</NavbarComponent.Brand>\r\n      <Nav className=\"mr-auto\">\r\n        <Nav.Link href=\"/\">Home</Nav.Link>\r\n        <Nav.Link href=\"/users\">Users</Nav.Link>\r\n      </Nav>\r\n      <Nav>\r\n        {\r\n          dataset.username ?\r\n          <Nav.Link href=\"/logout\">Logout [{dataset.username}]</Nav.Link> \r\n          :\r\n          <>\r\n            <Nav.Link href=\"/login\">Login</Nav.Link>\r\n            <Nav.Link href=\"/register\">Register</Nav.Link>\r\n          </>\r\n        }\r\n      </Nav>\r\n    </NavbarComponent>\r\n  );\r\n}\r\n\r\nexport default Navbar;","import React from 'react';\r\n\r\nimport Form from 'react-bootstrap/Form';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\n\r\n\r\nfunction CreateTweetForm(props) {\r\n  let value = props.value; \r\n  return (\r\n    <Row>\r\n      <Col xs={10} lg={8} className=\"mx-auto mb-5 px-0\">\r\n        <Form onSubmit={props.handleTweetAdd}>\r\n          <Form.Group controlId=\"exampleForm.ControlTextarea1\">\r\n            <Form.Label>Create New Tweet:</Form.Label>\r\n            <Form.Control as=\"textarea\" rows=\"3\" value={value} onChange={(e)=>{\r\n              props.handleTextArea(e);\r\n            }} />\r\n          </Form.Group>\r\n          <Button variant=\"primary\" type=\"submit\">\r\n            Submit\r\n          </Button>\r\n        </Form>\r\n      </Col>\r\n    </Row>\r\n  );\r\n}\r\n\r\nexport default CreateTweetForm;","import React from 'react';\r\n\r\nimport styled from 'styled-components';\r\n\r\nimport Col from 'react-bootstrap/Col';\r\nimport ButtonGroup from 'react-bootstrap/ButtonGroup';\r\nimport Button from 'react-bootstrap/Button';\r\n\r\nfunction Tweet(props) {\r\n  // This component needs: \r\n  // 1. dataset\r\n  // 2. tweet itself\r\n  // 3. handleRetweet, handleLikeClick\r\n  // 4. handleDeleteClick\r\n\r\n  let dataset = props.dataset; \r\n  let tweet = props.tweet; \r\n  let original = props.tweet.original;\r\n  \r\n  return (\r\n    <Col xs={10} lg={8} className=\"mx-auto border border-success py-3 mb-3\">\r\n      <div className='media'>\r\n        <div className=\"media-body\">\r\n          <div>\r\n            <a href={'/' + tweet.owner} className=\"mt-0 text-info\">{tweet.owner}</a>\r\n          </div>\r\n          {tweet.id} == {tweet.content}\r\n\r\n          {original && <div className=\"media mt-3 ml-5 border border-primary p-3 mb-3\">\r\n            <div className=\"media-body\">\r\n              <div>\r\n                <a href={'/' + original.owner} className=\"mt-0 text-info\">{original.owner}</a>\r\n              </div>\r\n              {original.content}\r\n            </div>\r\n            <ButtonGroup aria-label=\"Basic example\">\r\n              <StyledButton variant={original.likes.user_liked ? 'info' : 'primary'} onClick={()=>{\r\n                props.handleLikeClick(original.id)\r\n              }}>Like {original.likes.likes}</StyledButton>\r\n              <StyledButton variant=\"success\" onClick={props.handleRetweet.bind(null, original.id)}>Retweet</StyledButton>\r\n              {(dataset.page === 'home' || dataset.page === 'user') && <a href={'/' + tweet.original.id} className=\"btn btn-outline-info\">Comments</a>}\r\n            </ButtonGroup>\r\n          </div>}    \r\n        </div>\r\n        <ButtonGroup aria-label=\"Basic example\">\r\n          <StyledButton variant={tweet.likes.user_liked ? 'info' : 'primary'} onClick={()=>{props.handleLikeClick(tweet.id)}}>Like {tweet.likes.likes}</StyledButton>\r\n          <StyledButton variant=\"success\" onClick={props.handleRetweet.bind(null, tweet.id)}>Retweet</StyledButton>\r\n          {(dataset.page === 'home' || dataset.page === 'user') && <a href={'/' + tweet.id} className=\"btn btn-outline-info\">Commments</a>}\r\n          {(dataset.page === 'detail') && (tweet.owner === dataset.username) && <StyledButton variant=\"danger\" onClick={props.handleDeleteClick.bind(null, tweet.id)}>Delete</StyledButton>}\r\n        </ButtonGroup>\r\n      </div>\r\n    </Col>\r\n  );\r\n}\r\n\r\nconst StyledButton = styled(Button)`\r\n  // background-color: red; \r\n`\r\n\r\nexport default Tweet;\r\n","import React, {useEffect, useState} from 'react';\r\n\r\nimport Col from 'react-bootstrap/Col';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Form from 'react-bootstrap/Form';\r\n\r\nfunction Profile(props) {\r\n  let dataset = props.dataset;\r\n  let username = dataset.feedOwner || dataset.username;\r\n  const [profileData, setProfileData] = useState({});\r\n\r\n  const handleFollow = (e) => {\r\n    fetch(`api/accounts/adjust-followers/${dataset.feedOwner}/`, {\r\n      method: \"POST\", \r\n      headers: {\r\n        'HTTP_X_REQUESTED_WITH': 'XMLHttpRequest',\r\n        'X-Requested-With': 'XMLHttpRequest',\r\n        'X-CSRFToken': getCookie('csrftoken'),\r\n      },\r\n    })\r\n      .then(response => {\r\n        if (response.ok) return response.json();\r\n        else {throw new Error('Something went wrong!');};\r\n      })\r\n      .then(data => {\r\n        setProfileData(data);\r\n      })\r\n      .catch(err => {console.log(err)})\r\n  }\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    let data = new FormData(e.target);\r\n    fetch(`api/accounts/${username}/`, {\r\n      method: 'POST', \r\n      headers: {\r\n        'HTTP_X_REQUESTED_WITH': 'XMLHttpRequest',\r\n        'X-Requested-With': 'XMLHttpRequest',\r\n        'X-CSRFToken': getCookie('csrftoken'),\r\n      }, \r\n      body: data,\r\n    })\r\n    .then(response => {\r\n      if (response.ok) return response.json();\r\n      else {throw new Error('Something went wrong!');};\r\n    })\r\n    .then(data => {\r\n      console.log(data);\r\n    })\r\n    .catch(err => {console.log(err)}) \r\n  }\r\n\r\n  useEffect(() => {\r\n    fetch(`api/accounts/${username}/`)\r\n      .then(response => {\r\n        if (response.ok) return response.json();\r\n        else {throw new Error('Something went wrong!');};\r\n      })\r\n      .then(data => {\r\n        setProfileData(data);\r\n      })\r\n      .catch(err => {console.log(err)})\r\n  }, [username])\r\n\r\n\r\n  if (profileData.user){\r\n    let isFollower = profileData.followerings.followers.includes(dataset.username);\r\n\r\n    let editableInfo = (\r\n      <Col xs={5} lg={4} className=\"px-0 bg-primary\">\r\n        <Form className=\"px-2\" onSubmit={handleSubmit}>\r\n          <Form.Group controlId=\"formBasicUsername\">\r\n            <Form.Label>Username</Form.Label>\r\n            <Form.Control type=\"text\" name=\"username\" defaultValue={profileData.user.username}/>\r\n          </Form.Group>\r\n\r\n          <Form.Group controlId=\"formBasicFirstName\">\r\n            <Form.Label>First Name</Form.Label>\r\n            <Form.Control type=\"text\" name=\"firstName\" defaultValue={profileData.user.first_name}/>\r\n          </Form.Group>\r\n          \r\n          <Form.Group controlId=\"formBasicLastName\">\r\n            <Form.Label>Last Name</Form.Label>\r\n            <Form.Control type=\"text\" name=\"lastName\" defaultValue={profileData.user.last_name}/>\r\n          </Form.Group>\r\n          \r\n          <Form.Group controlId=\"formBasicEmail\">\r\n            <Form.Label>Email address</Form.Label>\r\n            <Form.Control type=\"email\" name=\"email\" defaultValue={profileData.user.email}/>\r\n          </Form.Group>\r\n\r\n          <Form.Group controlId=\"formBasicBio\">\r\n            <Form.Label>Bio</Form.Label>\r\n            <Form.Control type=\"text\" name=\"bio\" defaultValue={profileData.bio}/>\r\n          </Form.Group>\r\n\r\n          <Form.Group controlId=\"formBasicLocation\">\r\n            <Form.Label>Location</Form.Label>\r\n            <Form.Control type=\"text\" name=\"location\" defaultValue={profileData.location}/>\r\n          </Form.Group>\r\n\r\n\r\n          <Button variant=\"info\" type=\"submit\">\r\n            Submit\r\n          </Button>\r\n        </Form>\r\n      </Col>\r\n    )\r\n\r\n    let info = (\r\n      <Col xs={5} lg={4} className=\"px-0 bg-primary\">\r\n        Showing tweets of &gt;&gt; <span className=\"text-white\">{username}</span>\r\n        <div className=\"names\">\r\n          {profileData.user.first_name} {profileData.user.last_name} \r\n        </div>\r\n\r\n        {profileData.bio && <div className=\"bio\">{profileData.bio}</div>}\r\n        {profileData.location && <div className=\"location\">{profileData.location}</div>}\r\n        {(dataset.page === 'user') && \r\n          <Button variant={isFollower ? 'danger' : 'success'} onClick={handleFollow}>\r\n            {isFollower ? 'Unfollow' : 'Follow'}\r\n          </Button>\r\n        }\r\n      </Col>\r\n    )\r\n\r\n    return (\r\n      <Row className=\"d-flex justify-content-center mb-5\">\r\n        <Col xs={5} lg={4} className=\"px-0 bg-primary\">\r\n          <div className=\"followers\">Followers: {profileData.followerings.followers.length}</div>\r\n          <div className=\"following\">Following: {profileData.followerings.following.length}</div>\r\n        </Col>\r\n        {dataset.page === 'home' ? editableInfo : info}\r\n      </Row>\r\n    );\r\n  }else {\r\n    return <div>Loading...</div>\r\n  }\r\n}\r\n\r\nexport default Profile;\r\n\r\n\r\n// OTHER FUNCTIONS, CONSIDER CREATING UTILS.JS\r\nfunction getCookie(name) {\r\n  let cookieValue = null;\r\n  if (document.cookie && document.cookie !== '') {\r\n      const cookies = document.cookie.split(';');\r\n      for (let i = 0; i < cookies.length; i++) {\r\n          const cookie = cookies[i].trim();\r\n          // Does this cookie string begin with the name we want?\r\n          if (cookie.substring(0, name.length + 1) === (name + '=')) {\r\n              cookieValue = decodeURIComponent(cookie.substring(name.length + 1));\r\n              break;\r\n          }\r\n      }\r\n  }\r\n  return cookieValue;\r\n}","import React, {useContext, useState} from 'react';\r\nimport {UserContext} from '../context';\r\n\r\nimport Paginator from 'react-bootstrap/Pagination'; \r\n\r\nfunction Pagination(props) {\r\n  const [current, setCurrent] = useState(1);\r\n  let {next, prev, count, fetchSomeTweets, tweetsPerPage} = useContext(UserContext);\r\n  let numberOfPages = Math.ceil(count / tweetsPerPage);\r\n  \r\n  const handleNextPrev = (e) => {\r\n    let target = e.target.closest('[role=\"button\"]');\r\n    let endpoint = target.dataset.func === 'next' ? next : prev; \r\n    fetchSomeTweets(endpoint);\r\n    if (target.dataset.func === 'next'){\r\n      setCurrent(prevState => prevState + 1);\r\n    } else {\r\n      setCurrent(prevState => prevState - 1);\r\n    }\r\n  }\r\n\r\n  const handleFirstLast = (e) => {\r\n    e.preventDefault();\r\n    let endpoint = next ? next : prev;\r\n    let target = e.target.closest('[role=\"button\"]');\r\n    let whereTo = target.dataset.func === 'last' ? 'last' : 'first'; \r\n\r\n    if (whereTo === 'last'){\r\n      // should have used regex, cuz the point being is \r\n      // whatever page was there it needs to be replaced\r\n      // with numberOfPages\r\n      let pageNum = endpoint[endpoint.indexOf('/?page=') + 7];\r\n      endpoint = endpoint.replace(`/?page=${pageNum}`, `/?page=${numberOfPages}`);\r\n    } else {\r\n      // because we won't get /?page=1, instead it will be\r\n      // just api/tweets/, so there's no point to append 1\r\n      if (endpoint.includes('/?page')){\r\n        let pageNum = endpoint[endpoint.indexOf('/?page=') + 7];\r\n        endpoint = endpoint.replace(`/?page=${pageNum}`, `/?page=${1}`);\r\n      } else {\r\n        endpoint = prev;\r\n      }\r\n    }\r\n\r\n    fetchSomeTweets(endpoint);\r\n\r\n    if (whereTo === 'first'){\r\n      setCurrent(1);\r\n    } else {\r\n      setCurrent(numberOfPages);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"d-flex justify-content-center\">\r\n      <Paginator>\r\n        <Paginator.First onClick={handleFirstLast} data-func=\"first\" disabled={current === 1} />\r\n        <Paginator.Prev onClick={handleNextPrev} data-func=\"prev\" disabled={prev === null} />\r\n        <Paginator.Item active>{current}</Paginator.Item>\r\n        <Paginator.Next onClick={handleNextPrev} data-func=\"next\" disabled={next === null} />\r\n        <Paginator.Last onClick={handleFirstLast} data-func=\"last\" disabled={current === numberOfPages} />\r\n      </Paginator>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Pagination;\r\n","import React, {useContext} from 'react';\r\nimport { UserContext } from '../context';\r\n\r\nimport CreateTweetForm from '../components/CreateTweetForm';\r\nimport Tweet from '../components/Tweet';\r\nimport Profile from '../components/Profile';\r\nimport Pagination from '../components/Pagination';\r\n\r\nimport Container from 'react-bootstrap/Container';\r\nimport Row from 'react-bootstrap/Row';\r\n\r\nfunction Home(props) {\r\n  let {\r\n    dataset, handleLikeClick, \r\n    handleRetweet, handleTweetAdd, \r\n    handleTextArea, value, tweets,\r\n    count, tweetsPerPage\r\n  } = useContext(UserContext);\r\n\r\n  let content = (\r\n    <>\r\n      <Profile dataset={dataset}/>\r\n      {dataset.canTweet === 'true' && \r\n      <CreateTweetForm \r\n        value={value} \r\n        handleTextArea={handleTextArea} \r\n        handleTweetAdd={handleTweetAdd}\r\n      />}\r\n      <Row>\r\n        {tweets.map(tweet => \r\n          <Tweet\r\n            key={tweet.id} \r\n            tweet={tweet} \r\n            handleRetweet={handleRetweet} \r\n            handleLikeClick={handleLikeClick}\r\n            dataset={dataset}\r\n          /> \r\n        )}\r\n      </Row>\r\n      {count > tweetsPerPage && <Pagination />}\r\n    </>\r\n  )\r\n\r\n  // may be deleted\r\n  let login = <div>Hello, thanks for jumping in. Please, consider logging in to see the content!</div>\r\n\r\n  return (\r\n    <Container>\r\n      {dataset.username ? content : login}\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default Home;","import React, {useContext} from 'react';\r\nimport Tweet from '../components/Tweet';\r\nimport { UserContext } from '../context';\r\n\r\nfunction Detail(props) {\r\n\r\n  let {\r\n    dataset, tweets, handleRetweet, \r\n    handleLikeClick, handleDeleteClick,\r\n  } = useContext(UserContext);\r\n\r\n  let toRender = tweets.length ? <Tweet\r\n    tweet={tweets[0]} \r\n    handleRetweet={handleRetweet} \r\n    handleLikeClick={handleLikeClick}\r\n    handleDeleteClick={handleDeleteClick}\r\n    dataset={dataset}\r\n  /> : <div>Loading</div>\r\n\r\n  return toRender;\r\n}\r\n\r\nexport default Detail;","import React from 'react';\r\n\r\nfunction User(props) {\r\n  let user = props.user;\r\n  return (\r\n    <div className=\"card mb-5 border-primary\">\r\n      <div className=\"card-body\">\r\n        <a href={'/' + user.username}><h5 className=\"mt-0 mb-2\">@{user.username}</h5></a>\r\n        <li className=\"media\">\r\n          <img src=\"...\" className=\"mr-3\" alt=\"...\" />\r\n          <div className=\"media-body\">\r\n            <p>Full Name: {user.first_name + ' ' + user.last_name}</p>\r\n            <p>Location: {user.profile.location}</p>\r\n          </div>\r\n        </li>\r\n      </div>\r\n      <div class=\"card-footer bg-transparent py-0 border-primary\">\r\n        <p>Bio: {user.profile.bio}</p>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default User;","import React, { useEffect, useState } from 'react';\r\nimport User from '../components/User';\r\nimport Container from 'react-bootstrap/Container';\r\n\r\nfunction Users(props) {\r\n\r\n  const [users, setUsers] = useState([]);\r\n\r\n  useEffect(()=>{\r\n    fetch('api/accounts/users_list')\r\n      .then(response => {\r\n        if (response.ok){\r\n          return response.json();\r\n        } else {\r\n          throw new Error('something went wrong!');\r\n        }\r\n      })\r\n      .then(data => {\r\n        console.log(data);\r\n        setUsers(data);\r\n      })\r\n      .catch(err => {console.log(err);})\r\n  }, [])\r\n\r\n  return (\r\n    <Container>\r\n      <h2 className=\"text-center\">Present all the registered users so far</h2>\r\n      <ul class=\"list-unstyled\">\r\n        {users.map(user => <User key={user.username} user={user} />)}\r\n      </ul>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default Users;","import React, {useContext} from 'react';\nimport { UserContext } from './context';\nimport Navbar from './components/Navbar';\nimport Home from './pages/Home';\nimport Detail from './pages/Detail';\nimport Users from './pages/Users';\n\nfunction App(props) {\n  let {dataset: {page}} = useContext(UserContext); \n\n  return(\n    <>\n      <Navbar />\n      {page === 'detail' && <Detail />}\n      {page === 'users' && <Users />}\n      {(page === 'home' || page === 'user')  && <Home />}\n    </>\n  )\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport UserContextProvider from './context';\r\n\r\n// need to get an element first, and assign it to a vatiable\r\n// to get its dataset values\r\n// to let the context know what endpoint should it fetch to\r\nlet reactPage = document.getElementById('root');\r\n\r\n// reactPage will be null if it's login or register\r\n// cuz django handles registration and login by itself\r\nif (reactPage){\r\n  ReactDOM.render(\r\n    // we should consider moving context to the App, cuz there're some component\r\n    // which don't need the context value at all\r\n    <UserContextProvider {...reactPage.dataset}>\r\n      <App />\r\n    </UserContextProvider>,\r\n    reactPage\r\n  );\r\n}\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}